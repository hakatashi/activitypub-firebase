name: Deploy to Firebase Hosting on PR

on:
  pull_request:
  pull_request_target:

permissions:
  checks: write
  contents: read
  pull-requests: write

jobs:
  check_access:
    runs-on: ubuntu-latest
    if: >
      github.event.pull_request.head.repo.full_name == github.repository &&
      (
        (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') ||
        (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]')
      )
    outputs:
      status: ${{ steps.check.conclusion }}
    steps:
      - id: check
        name: Check if the PR author has access to the Firebase project
        env:
          FIREBASE_SERVICE_ACCOUNT_ACTIVITYPUB_FIREBASE_DEV: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_ACTIVITYPUB_FIREBASE_DEV }}
        continue-on-error: true
        run: |
          if [ -z "$FIREBASE_SERVICE_ACCOUNT_ACTIVITYPUB_FIREBASE_DEV" ]; then
            echo "The FIREBASE_SERVICE_ACCOUNT_ACTIVITYPUB_FIREBASE_DEV secret is not set."
            exit 1
          fi

  build_and_preview:
    needs: check_access
    if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - id: activitypub-firebase
            key: FIREBASE_SERVICE_ACCOUNT_ACTIVITYPUB_FIREBASE
          - id: activitypub-firebase-dev
            key: FIREBASE_SERVICE_ACCOUNT_ACTIVITYPUB_FIREBASE_DEV
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{secrets.GITHUB_TOKEN}}'
          firebaseServiceAccount: '${{secrets[matrix.project.key]}}'
          projectId: '${{matrix.project.id}}'
